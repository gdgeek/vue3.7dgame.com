{
    "sourceFile": "src/views/meta/scene.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1723625294540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724213429946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n const route = useRoute();\n const router = useRouter();\n const breadcrumbStore = useBreadcrumbStore();\n \n-const src = path.join(\"/static/three.js/editor\", \"meta-editor.html\");\n+const src = \"/static/three.js/editor/meta-editor.html\"; //path.join(\"\", \"\");\n \n // console.log(\"src\", src);\n const isInit = ref(false);\n const dialog = ref();\n"
                },
                {
                    "date": 1724213442952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n const route = useRoute();\n const router = useRouter();\n const breadcrumbStore = useBreadcrumbStore();\n \n-const src = \"/static/three.js/editor/meta-editor.html\"; //path.join(\"\", \"\");\n+const src = \"https://editor.4mr.cn/three.js/editor/meta-editor.html\"; //path.join(\"\", \"\");\n \n // console.log(\"src\", src);\n const isInit = ref(false);\n const dialog = ref();\n"
                },
                {
                    "date": 1724397015892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n import path from \"path-browserify\";\n \n const route = useRoute();\n const router = useRouter();\n-\n+alert( import.meta.env.VITE_APP_EDITOR_URL)\n const src = \"https://editor.4mr.cn/three.js/editor/meta-editor.html\"; //path.join(\"\", \"\");\n \n // console.log(\"src\", src);\n const isInit = ref(false);\n"
                }
            ],
            "date": 1723625294540,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"verse-scene\">\n    <resource-dialog\n      @selected=\"selectResources\"\n      @cancel=\"cancel()\"\n      ref=\"dialog\"\n    ></resource-dialog>\n    <el-container>\n      <el-main>\n        <iframe\n          id=\"editor\"\n          :src=\"src\"\n          class=\"content\"\n          height=\"100%\"\n          width=\"100%\"\n        ></iframe>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onBeforeUnmount, computed } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport ResourceDialog from \"@/components/MrPP/ResourceDialog.vue\";\nimport { AbilityEditable } from \"@/ability/ability\";\nimport { useBreadcrumbStore } from \"@/store/modules/breadcrumb\";\nimport env from \"@/environment\";\nimport { putMeta, getMeta } from \"@/api/v1/meta\";\nimport path from \"path-browserify\";\nimport { useAbility } from \"@/composables/ability\";\n\nconst route = useRoute();\nconst router = useRouter();\nconst breadcrumbStore = useBreadcrumbStore();\n\nconst src = path.join(\"/static/three.js/editor\", \"meta-editor.html\");\n\n// console.log(\"src\", src);\nconst isInit = ref(false);\nconst dialog = ref();\n\nconst id = computed(() => parseInt(route.query.id as string));\nconst title = computed(() => route.query.title?.slice(4) as string);\n\nconst setBreadcrumbs = breadcrumbStore.setBreadcrumbs;\n\nconst cancel = () => {\n  // Cancel logic\n};\n\nconst selectResources = (data: any) => {\n  console.error(data);\n  postMessage({\n    action: \"load_resource\",\n    data,\n  });\n};\n\n// const saveable = (data: any) => {\n//   if (data === null) {\n//     return false;\n//   }\n//   const { can } = useAbility();\n//   return can(\"editable\", AbilityEditable.name, {\n//     editable: data.editable,\n//   });\n// };\n\nconst loadResource = (data: any) => {\n  dialog.value.open(null, id.value, data.type);\n};\n\nconst postMessage = (data: any) => {\n  data.verify = \"mrpp.com\";\n  const iframe = document.getElementById(\"editor\") as HTMLIFrameElement;\n  iframe.contentWindow?.postMessage(data, \"*\");\n};\n\nconst handleMessage = async (e: MessageEvent) => {\n  const data = e.data;\n  if (data.from === \"mrpp-editor\") {\n    switch (data.action) {\n      case \"save\":\n        saveMeta(data);\n        break;\n      case \"load_resource\":\n        loadResource(data.data);\n        break;\n      case \"goto\":\n        if (data.data === \"blockly.js\") {\n          const scriptRoute = router\n            .getRoutes()\n            .find((route) => route.path === \"/meta/script\");\n          if (scriptRoute && scriptRoute.meta.title) {\n            const metaTitle = scriptRoute.meta.title as string;\n            router.push({\n              path: \"/meta/script\",\n              query: {\n                id: id.value,\n                title: metaTitle + title.value,\n              },\n            });\n          }\n        } else if (data.data === \"rete.js\") {\n          router.push({\n            path: \"/meta/rete-meta\",\n            query: { id: id.value, title: title.value },\n          });\n        }\n        break;\n      case \"ready\":\n        if (!isInit.value) {\n          isInit.value = true;\n          const meta = await getMeta(id.value);\n          // breadcrumb(meta.data);\n          postMessage({\n            action: \"load\",\n            data: meta.data,\n            // saveable: saveable(meta.data),\n            saveable: true,\n          });\n        }\n        break;\n    }\n  }\n};\n\n// const breadcrumb = (meta: any) => {\n//   setBreadcrumbs([\n//     {\n//       path: \"/\",\n//       meta: { title: \"元宇宙实景编程平台\" },\n//     },\n//     {\n//       path: \"/meta-verse/index\",\n//       meta: { title: \"宇宙\" },\n//     },\n//     {\n//       path: `/verse/view?id=${meta.verse_id}`,\n//       meta: { title: \"【宇宙】\" },\n//     },\n//     {\n//       path: `/verse/scene?id=${meta.verse_id}`,\n//       meta: { title: \"宇宙编辑\" },\n//     },\n//     {\n//       path: `/meta/rete-meta?id=${meta.id}&title=${encodeURIComponent(title.value)}`,\n//       meta: { title: \"元编辑\" },\n//     },\n//     {\n//       path: \".\",\n//       meta: { title: \"内容编辑\" },\n//     },\n//   ]);\n// };\n\nconst saveMeta = async ({ data, events }: { data: any; events: any }) => {\n  // if (!saveable) {\n  //   ElMessage({\n  //     type: \"info\",\n  //     message: \"没有保存权限!\",\n  //   });\n  //   return;\n  // }\n  await putMeta(id.value, { data, events });\n  ElMessage({\n    type: \"success\",\n    message: \"保存成功!\",\n  });\n};\n\nonMounted(() => {\n  window.addEventListener(\"message\", handleMessage);\n  setBreadcrumbs([\n    {\n      path: \"/\",\n      meta: { title: \"元宇宙实景编程平台\" },\n    },\n    {\n      path: \"/meta-verse/index\",\n      meta: { title: \"宇宙\" },\n    },\n    {\n      path: \".\",\n      meta: { title: \"场景编辑\" },\n    },\n  ]);\n});\n\nonBeforeUnmount(() => {\n  window.removeEventListener(\"message\", handleMessage);\n  setBreadcrumbs([]);\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.content {\n  height: calc(100vh - 140px);\n  border-style: solid;\n  border-width: 1px;\n}\n</style>\n"
        }
    ]
}