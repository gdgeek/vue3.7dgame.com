{
    "sourceFile": "vite.config.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1723624347543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723624366898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,16 +34,9 @@\n //  https://cn.vitejs.dev/config\n export default defineConfig(({ mode }: ConfigEnv): UserConfig => {\n   const env = loadEnv(mode, process.cwd());\n   return {\n-    server: {\n-      cors: {\n-        origin: '*', // 允许任何域名\n-        methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], // 允许任何请求方法\n-        allowedHeaders: '*', // 允许任何请求头\n-        credentials: true, // 如果需要支持发送凭据的跨域请求，可以设置为 true\n-      }\n-    },\n+    \n     resolve: {\n       alias: {\n         \"@\": pathSrc,\n       },\n@@ -60,8 +53,14 @@\n         },\n       },\n     },\n     server: {\n+      cors: {\n+        origin: '*', // 允许任何域名\n+        methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], // 允许任何请求方法\n+        allowedHeaders: '*', // 允许任何请求头\n+        credentials: true, // 如果需要支持发送凭据的跨域请求，可以设置为 true\n+      }\n       // 允许IP访问\n       host: \"0.0.0.0\",\n       // 应用端口 (默认:3000)\n       port: Number(env.VITE_APP_PORT),\n"
                },
                {
                    "date": 1723624491928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n         origin: '*', // 允许任何域名\n         methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], // 允许任何请求方法\n         allowedHeaders: '*', // 允许任何请求头\n         credentials: true, // 如果需要支持发送凭据的跨域请求，可以设置为 true\n-      }\n+      },\n       // 允许IP访问\n       host: \"0.0.0.0\",\n       // 应用端口 (默认:3000)\n       port: Number(env.VITE_APP_PORT),\n"
                },
                {
                    "date": 1726886048119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n       ],\n     },\n     // 构建配置\n     build: {\n-      chunkSizeWarningLimit: 2000, // 消除打包大小超过500kb警告\n+      chunkSizeWarningLimit: 4000, // 消除打包大小超过500kb警告\n       minify: \"terser\", // Vite 2.6.x 以上需要配置 minify: \"terser\", terserOptions 才能生效\n       terserOptions: {\n         compress: {\n           keep_infinity: true, // 防止 Infinity 被压缩成 1/0，这可能会导致 Chrome 上的性能问题\n"
                }
            ],
            "date": 1723624347543,
            "name": "Commit-0",
            "content": "import vue from \"@vitejs/plugin-vue\";\nimport vueJsx from \"@vitejs/plugin-vue-jsx\";\nimport { UserConfig, ConfigEnv, loadEnv, defineConfig } from \"vite\";\n\nimport AutoImport from \"unplugin-auto-import/vite\";\nimport Components from \"unplugin-vue-components/vite\";\nimport { ElementPlusResolver } from \"unplugin-vue-components/resolvers\";\nimport Icons from \"unplugin-icons/vite\";\nimport IconsResolver from \"unplugin-icons/resolver\";\n\nimport { createSvgIconsPlugin } from \"vite-plugin-svg-icons\";\nimport mockDevServerPlugin from \"vite-plugin-mock-dev-server\";\n\nimport UnoCSS from \"unocss/vite\";\nimport { resolve } from \"path\";\nimport {\n  name,\n  version,\n  engines,\n  dependencies,\n  devDependencies,\n} from \"./package.json\";\n\n// https://devtools-next.vuejs.org/\nimport VueDevTools from \"vite-plugin-vue-devtools\";\n\n/** 平台的名称、版本、运行所需的`node`版本、依赖、构建时间的类型提示 */\nconst __APP_INFO__ = {\n  pkg: { name, version, engines, dependencies, devDependencies },\n  buildTimestamp: Date.now(),\n};\n\nconst pathSrc = resolve(__dirname, \"src\");\n//  https://cn.vitejs.dev/config\nexport default defineConfig(({ mode }: ConfigEnv): UserConfig => {\n  const env = loadEnv(mode, process.cwd());\n  return {\n    server: {\n      cors: {\n        origin: '*', // 允许任何域名\n        methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], // 允许任何请求方法\n        allowedHeaders: '*', // 允许任何请求头\n        credentials: true, // 如果需要支持发送凭据的跨域请求，可以设置为 true\n      }\n    },\n    resolve: {\n      alias: {\n        \"@\": pathSrc,\n      },\n    },\n    css: {\n      // CSS 预处理器\n      preprocessorOptions: {\n        // 定义全局 SCSS 变量\n        scss: {\n          javascriptEnabled: true,\n          additionalData: `\n            @use \"@/styles/variables.scss\" as *;\n          `,\n        },\n      },\n    },\n    server: {\n      // 允许IP访问\n      host: \"0.0.0.0\",\n      // 应用端口 (默认:3000)\n      port: Number(env.VITE_APP_PORT),\n      // 运行是否自动打开浏览器\n      open: true,\n      proxy: {\n        /** 代理前缀为 /dev-api 的请求  */\n        [env.VITE_APP_BASE_API]: {\n          changeOrigin: true,\n          // 接口地址\n          target: env.VITE_APP_API_URL,\n          rewrite: (path) =>\n            path.replace(new RegExp(\"^\" + env.VITE_APP_BASE_API), \"\"),\n        },\n      },\n    },\n    plugins: [\n      vue(),\n      // jsx、tsx语法支持\n      vueJsx(),\n      // MOCK 服务\n      env.VITE_MOCK_DEV_SERVER === \"true\" ? mockDevServerPlugin() : null,\n      UnoCSS({\n        hmrTopLevelAwait: false,\n      }),\n      // 自动导入参考： https://github.com/sxzz/element-plus-best-practices/blob/main/vite.config.ts\n      AutoImport({\n        // 自动导入 Vue 相关函数，如：ref, reactive, toRef 等\n        imports: [\"vue\", \"@vueuse/core\", \"pinia\", \"vue-router\", \"vue-i18n\"],\n        resolvers: [\n          // 自动导入 Element Plus 相关函数，如：ElMessage, ElMessageBox... (带样式)\n          ElementPlusResolver(),\n          // 自动导入图标组件\n          IconsResolver({}),\n        ],\n        eslintrc: {\n          // 是否自动生成 eslint 规则，建议生成之后设置 false\n          enabled: false,\n          // 指定自动导入函数 eslint 规则的文件\n          filepath: \"./.eslintrc-auto-import.json\",\n          globalsPropValue: true,\n        },\n        // 是否在 vue 模板中自动导入\n        vueTemplate: true,\n        // 指定自动导入函数TS类型声明文件路径 (false:关闭自动生成)\n        dts: false,\n        // dts: \"src/typings/auto-imports.d.ts\",\n      }),\n      Components({\n        resolvers: [\n          // 自动导入 Element Plus 组件\n          ElementPlusResolver(),\n          // 自动注册图标组件\n          IconsResolver({\n            // element-plus图标库，其他图标库 https://icon-sets.iconify.design/\n            enabledCollections: [\"ep\"],\n          }),\n        ],\n        // 指定自定义组件位置(默认:src/components)\n        dirs: [\"src/components\", \"src/**/components\"],\n        // 指定自动导入组件TS类型声明文件路径 (false:关闭自动生成)\n        dts: false,\n        // dts: \"src/typings/components.d.ts\",\n      }),\n      Icons({\n        // 自动安装图标库\n        autoInstall: true,\n      }),\n      createSvgIconsPlugin({\n        // 指定需要缓存的图标文件夹\n        iconDirs: [resolve(pathSrc, \"assets/icons\")],\n        // 指定symbolId格式\n        symbolId: \"icon-[dir]-[name]\",\n      }),\n      VueDevTools({\n        openInEditorHost: `http://localhost:${env.VITE_APP_PORT}`,\n      }),\n    ],\n    // 预加载项目必需的组件\n    optimizeDeps: {\n      include: [\n        \"vue\",\n        \"vue-router\",\n        \"pinia\",\n        \"axios\",\n        \"@vueuse/core\",\n        \"path-to-regexp\",\n        \"vue-i18n\",\n        \"path-browserify\",\n        \"element-plus/es/components/form/style/css\",\n        \"element-plus/es/components/form-item/style/css\",\n        \"element-plus/es/components/button/style/css\",\n        \"element-plus/es/components/input/style/css\",\n        \"element-plus/es/components/input-number/style/css\",\n        \"element-plus/es/components/switch/style/css\",\n        \"element-plus/es/components/upload/style/css\",\n        \"element-plus/es/components/menu/style/css\",\n        \"element-plus/es/components/col/style/css\",\n        \"element-plus/es/components/icon/style/css\",\n        \"element-plus/es/components/row/style/css\",\n        \"element-plus/es/components/tag/style/css\",\n        \"element-plus/es/components/dialog/style/css\",\n        \"element-plus/es/components/loading/style/css\",\n        \"element-plus/es/components/radio/style/css\",\n        \"element-plus/es/components/radio-group/style/css\",\n        \"element-plus/es/components/popover/style/css\",\n        \"element-plus/es/components/scrollbar/style/css\",\n        \"element-plus/es/components/tooltip/style/css\",\n        \"element-plus/es/components/dropdown/style/css\",\n        \"element-plus/es/components/dropdown-menu/style/css\",\n        \"element-plus/es/components/dropdown-item/style/css\",\n        \"element-plus/es/components/sub-menu/style/css\",\n        \"element-plus/es/components/menu-item/style/css\",\n        \"element-plus/es/components/divider/style/css\",\n        \"element-plus/es/components/card/style/css\",\n        \"element-plus/es/components/link/style/css\",\n        \"element-plus/es/components/breadcrumb/style/css\",\n        \"element-plus/es/components/breadcrumb-item/style/css\",\n        \"element-plus/es/components/table/style/css\",\n        \"element-plus/es/components/tree-select/style/css\",\n        \"element-plus/es/components/table-column/style/css\",\n        \"element-plus/es/components/select/style/css\",\n        \"element-plus/es/components/option/style/css\",\n        \"element-plus/es/components/pagination/style/css\",\n        \"element-plus/es/components/tree/style/css\",\n        \"element-plus/es/components/alert/style/css\",\n        \"element-plus/es/components/radio-button/style/css\",\n        \"element-plus/es/components/checkbox-group/style/css\",\n        \"element-plus/es/components/checkbox/style/css\",\n        \"element-plus/es/components/tabs/style/css\",\n        \"element-plus/es/components/tab-pane/style/css\",\n        \"element-plus/es/components/rate/style/css\",\n        \"element-plus/es/components/date-picker/style/css\",\n        \"element-plus/es/components/notification/style/css\",\n        \"element-plus/es/components/image/style/css\",\n        \"element-plus/es/components/statistic/style/css\",\n        \"element-plus/es/components/watermark/style/css\",\n        \"element-plus/es/components/config-provider/style/css\",\n        \"element-plus/es/components/text/style/css\",\n        \"element-plus/es/components/drawer/style/css\",\n        \"element-plus/es/components/color-picker/style/css\",\n        \"element-plus/es/components/backtop/style/css\",\n      ],\n    },\n    // 构建配置\n    build: {\n      chunkSizeWarningLimit: 2000, // 消除打包大小超过500kb警告\n      minify: \"terser\", // Vite 2.6.x 以上需要配置 minify: \"terser\", terserOptions 才能生效\n      terserOptions: {\n        compress: {\n          keep_infinity: true, // 防止 Infinity 被压缩成 1/0，这可能会导致 Chrome 上的性能问题\n          drop_console: true, // 生产环境去除 console\n          drop_debugger: true, // 生产环境去除 debugger\n        },\n        format: {\n          comments: false, // 删除注释\n        },\n      },\n      rollupOptions: {\n        output: {\n          // manualChunks: {\n          //   \"vue-i18n\": [\"vue-i18n\"],\n          // },\n          // 用于从入口点创建的块的打包输出格式[name]表示文件名,[hash]表示该文件内容hash值\n          entryFileNames: \"js/[name].[hash].js\",\n          // 用于命名代码拆分时创建的共享块的输出命名\n          chunkFileNames: \"js/[name].[hash].js\",\n          // 用于输出静态资源的命名，[ext]表示文件扩展名\n          assetFileNames: (assetInfo: any) => {\n            const info = assetInfo.name.split(\".\");\n            let extType = info[info.length - 1];\n            // console.log('文件信息', assetInfo.name)\n            if (\n              /\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$/i.test(assetInfo.name)\n            ) {\n              extType = \"media\";\n            } else if (/\\.(png|jpe?g|gif|svg)(\\?.*)?$/.test(assetInfo.name)) {\n              extType = \"img\";\n            } else if (/\\.(woff2?|eot|ttf|otf)(\\?.*)?$/i.test(assetInfo.name)) {\n              extType = \"fonts\";\n            }\n            return `${extType}/[name].[hash].[ext]`;\n          },\n        },\n      },\n    },\n    define: {\n      __APP_INFO__: JSON.stringify(__APP_INFO__),\n    },\n  };\n});\n"
        }
    ]
}